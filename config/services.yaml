# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    stripe.secret_key: "%env(STRIPE_SECRET_KEY)%"
    stripe.publishable_key: "%env(STRIPE_PUBLISHABLE_KEY)%"
    jwt_refresh_token_ttl: "%env(JWT_REFRESH_TOKEN_TTL)%"
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: "../src/"
        exclude:
            - "../src/DependencyInjection/"
            - "../src/Entity/"
            - "../src/Kernel.php"

    App\Security\Authentication\CustomAuthenticationSuccessHandler:
        arguments:
            $jwtManager: "@lexik_jwt_authentication.jwt_manager"
            $refreshTokenManager: "@gesdinet.jwtrefreshtoken.refresh_token_manager"
            $refreshTokenTTL: "%env(JWT_REFRESH_TOKEN_TTL)%" # e.g. "P30D"
        tags: ["monolog.logger"] # optional

    App\Security\Authentication\CustomRefreshSuccessHandler:
        arguments:
            $jwtManager: "@lexik_jwt_authentication.jwt_manager"
            $refreshTokenManager: "@gesdinet.jwtrefreshtoken.refresh_token_manager"
            $refreshTokenTTL: "%jwt_refresh_token_ttl%"

    # Ensure all controllers are public and tagged
    App\Controller\SecurityController:
        tags: ["controller.service_arguments"]
        public: true
        # arguments auto-wired by default
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
